cmake_minimum_required(VERSION 2.6)
project (pstack)
add_executable(t t.cc)
add_executable(canal canal.cc)
add_library(dwelf STATIC dead.cc dump.cc dwarf.cc elf.cc live.cc process.cc proc_service.cc reader.cc util.cc)
add_executable(pstack pstack.cc )
target_link_libraries(pstack dwelf)
target_link_libraries(canal dwelf)

if(NOT ELF_BITS)
if(CMAKE_SIZEOF_VOID_P EQUAL 8)
  SET(ELF_BITS 64)  
endif(CMAKE_SIZEOF_VOID_P EQUAL 8)
if(CMAKE_SIZEOF_VOID_P EQUAL 4)
  SET(ELF_BITS 32)  
endif(CMAKE_SIZEOF_VOID_P EQUAL 4)
endif(NOT ELF_BITS)

if (PROFILE)
    add_definitions("-pg")
    set_target_properties(pstack PROPERTIES LINK_FLAGS -pg)
endif(PROFILE)

if(CMAKE_COMPILER_IS_GNUCXX)
    add_definitions("-std=c++0x")
    if (ELF_BITS EQUAL 32)
        add_definitions("-m32")
        set_target_properties(pstack PROPERTIES LINK_FLAGS -m32)
        set_target_properties(canal PROPERTIES LINK_FLAGS -m32)
        set_target_properties(t PROPERTIES LINK_FLAGS -m32)
    endif()
endif(CMAKE_COMPILER_IS_GNUCXX)

add_definitions("-DELF_BITS=${ELF_BITS}")

if("${CMAKE_SYSTEM}" MATCHES "Linux")
    add_definitions("-D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE")
    target_link_libraries(pstack "-lthread_db")
    target_link_libraries(canal "-lthread_db")
    target_link_libraries(t "-lpthread -ldl")
endif("${CMAKE_SYSTEM}" MATCHES "Linux")
